var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const phin = require("phin")
    .defaults({
    url: "https://sandpile.xyz/api/grantBadgeItem",
    method: "POST",
    timeout: 12000
});
function playerGrantBadge(hostKey, validator, badgeId) {
    return __awaiter(this, void 0, void 0, function* () {
        const { body } = yield phin({
            data: { hostKey, validator, badgeId },
            parse: "json"
        });
        return body;
    });
}
module.exports = playerGrantBadge;
